{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sveiki\\\\PhpstormProjects\\\\xCourierApplication\\\\react-native-firebase\\\\src\\\\screens\\\\PickupScreen\\\\PickupScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { firebase } from \"../../firebase/config\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nvar Tab = createBottomTabNavigator();\nexport default function PickupScreen(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, entities && React.createElement(View, {\n    style: styles.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    data: entities,\n    renderItem: renderEntity,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    removeClippedSubviews: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Sveiki/PhpstormProjects/xCourierApplication/react-native-firebase/src/screens/PickupScreen/PickupScreen.js"],"names":["React","useEffect","useState","firebase","NavigationContainer","createBottomTabNavigator","Tab","PickupScreen","props","styles","container","entities","listContainer","renderEntity","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAGA,SAASC,QAAT;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,wBAAR,QAAuC,+BAAvC;AAEA,IAAMC,GAAG,GAAGD,wBAAwB,EAApC;AACA,eAAe,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AA0DxC,SAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,QAAQ,IACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAED,QADV;AAEI,IAAA,UAAU,EAAEE,YAFhB;AAGI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAHlB;AAII,IAAA,qBAAqB,EAAE,IAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CAJJ;AAkBH","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FlatList, Keyboard, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\n// import styles from './styles';\r\nimport { firebase } from '../../firebase/config';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nexport default function PickupScreen(props) {\r\n\r\n    // const [entityText, setEntityText] = useState('')\r\n    // const [entities, setEntities] = useState([])\r\n    //\r\n    // const entityRef = firebase.firestore().collection('shipments')\r\n    // const userID = props.extraData.id\r\n    // console.log(props);\r\n    // useEffect(() => {\r\n    //     entityRef\r\n    //         .where(\"pickupDriver\", \"==\", \"Kazimieras\")\r\n    //         // .orderBy('createdAt', 'desc')\r\n    //         .onSnapshot(\r\n    //             querySnapshot => {\r\n    //                 const newEntities = []\r\n    //                 querySnapshot.forEach(doc => {\r\n    //                     const entity = doc.data()\r\n    //                     entity.id = doc.id\r\n    //                     newEntities.push(entity)\r\n    //                 });\r\n    //                 setEntities(newEntities)\r\n    //             },\r\n    //             error => {\r\n    //                 console.log(error)\r\n    //             }\r\n    //         )\r\n    // }, [])\r\n    //\r\n    // const onAddButtonPress = () => {\r\n    //     if (entityText && entityText.length > 0) {\r\n    //         const timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n    //         const data = {\r\n    //             text: entityText,\r\n    //             authorID: userID,\r\n    //             createdAt: timestamp,\r\n    //         };\r\n    //         entityRef\r\n    //             .add(data)\r\n    //             .then(_doc => {\r\n    //                 setEntityText('')\r\n    //                 Keyboard.dismiss()\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 alert(error)\r\n    //             });\r\n    //     }\r\n    // }\r\n    //\r\n    // const renderEntity = ({item, index}) => {\r\n    //     return (\r\n    //         <View style={styles.entityContainer}>\r\n    //             <Text style={styles.entityText}>\r\n    //                 {item.number}  {item.receiverAddress}\r\n    //             </Text>\r\n    //         </View>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        // <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        //     <Text>PickupScreen Screen!</Text>\r\n        // </View>\r\n        <View style={styles.container}>\r\n            { entities && (\r\n                <View style={styles.listContainer}>\r\n                    <FlatList\r\n                        data={entities}\r\n                        renderItem={renderEntity}\r\n                        keyExtractor={(item) => item.id}\r\n                        removeClippedSubviews={true}\r\n                    />\r\n\r\n                </View>\r\n            )}\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}